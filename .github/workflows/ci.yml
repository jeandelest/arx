name: Cargo Build & Test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install -y libfuse-dev

      - name: Install dependencies
        if: ${{ matrix.os == 'macos-latest'}}
        run: |
          brew install macfuse

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup rust toolchain ${{ matrix.toolchain }}
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add rustfmt

      - name: Check format
        run: cargo fmt --check

      - name: Test code
        run: cargo test --verbose --features in_ci

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.toolchain }}
          path: |
            target/debug/arx
            target/debug/arx.exe
            target/debug/tar2arx
            target/debug/tar2arx.exe
            target/debug/zip2arx
            target/debug/zip2arx.exe
            target/debug/auto_mount
          compression-level: 0
